

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 30 10:59:52 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12HV615
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12HV615 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0005                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0085                     	;# 
    79  008C                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0096                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  0005                     _GPIO	set	5
    91  000B                     _INTCONbits	set	11
    92  0005                     _GPIObits	set	5
    93  0085                     _TRISA	set	133
    94  009F                     _ANSEL	set	159
    95                           
    96                           	psect	cinit
    97  000B                     start_initialization:	
    98                           ; #config settings
    99                           
   100  000B                     __initialization:
   101                           
   102                           ; Clear objects allocated to COMMON
   103  000B  01F3               	clrf	__pbssCOMMON& (0+127)
   104  000C                     end_of_initialization:	
   105                           ;End of C runtime variable initialization code
   106                           
   107  000C                     __end_of__initialization:
   108  000C  0183               	clrf	3
   109  000D  2825               	ljmp	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMMON
   112  0073                     __pbssCOMMON:
   113  0073                     _cmpt:
   114  0073                     	ds	1
   115                           
   116                           	psect	cstackCOMMON
   117  0070                     __pcstackCOMMON:
   118  0070                     ?_my_isr:
   119  0070                     ??_my_isr:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  0070                     ?_main:	
   123                           ; 1 bytes @ 0x0
   124                           
   125                           
   126                           ; 1 bytes @ 0x0
   127  0070                     	ds	3
   128  0073                     ??_main:
   129                           
   130                           	psect	maintext
   131  0025                     __pmaintext:	
   132                           ; 1 bytes @ 0x3
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 42 in file "main.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2
   147 ;; Tracked objects:
   148 ;;		On entry : B00/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMMON   BANK0
   152 ;;      Params:         0       0
   153 ;;      Locals:         0       0
   154 ;;      Temps:          0       0
   155 ;;      Totals:         0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels required when called:    1
   158 ;; This function calls:
   159 ;;		Nothing
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           
   166                           ;psect for function _main
   167  0025                     _main:
   168  0025                     l544:	
   169                           ;incstack = 0
   170                           ; Regs used in _main: [wreg+status,2]
   171                           
   172                           
   173                           ;main.c: 43:     ANSEL=0;
   174  0025  1683               	bsf	3,5	;RP0=1, select bank1
   175  0026  019F               	clrf	31	;volatile
   176                           
   177                           ;main.c: 44:     GPIO=0;
   178  0027  1283               	bcf	3,5	;RP0=0, select bank0
   179  0028  0185               	clrf	5	;volatile
   180  0029                     l546:
   181                           
   182                           ;main.c: 45:     TRISA=0x04;
   183  0029  3004               	movlw	4
   184  002A  1683               	bsf	3,5	;RP0=1, select bank1
   185  002B  0085               	movwf	5	;volatile
   186  002C                     l548:
   187                           
   188                           ;main.c: 46:     INTCONbits.INTE=1;
   189  002C  160B               	bsf	11,4	;volatile
   190  002D                     l550:
   191                           
   192                           ;main.c: 47:     (INTCONbits.GIE = 1);
   193  002D  178B               	bsf	11,7	;volatile
   194  002E  0063               	sleep	;# 
   195  002F                     l552:
   196                           
   197                           ;main.c: 49:     __nop();
   198  002F  0000               	nop
   199  0030                     l26:	
   200                           ;main.c: 50:     for(;;)
   201                           
   202                           
   203                           ;main.c: 51:     {;main.c: 52:     }
   204  0030  2830               	goto	l26
   205  0031  280A               	ljmp	start
   206  0032                     __end_of_main:
   207                           
   208                           	psect	text1
   209  000E                     __ptext1:	
   210 ;; *************** function _my_isr *****************
   211 ;; Defined at:
   212 ;;		line 25 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0
   226 ;;      Params:         0       0
   227 ;;      Locals:         0       0
   228 ;;      Temps:          3       0
   229 ;;      Totals:         3       0
   230 ;;Total ram usage:        3 bytes
   231 ;; Hardware stack levels used:    1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		Interrupt level 1
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           
   240                           ;psect for function _my_isr
   241  000E                     _my_isr:
   242  000E                     i1l538:
   243                           
   244                           ;main.c: 27:     cmpt++;
   245  000E  3001               	movlw	1
   246  000F  00F0               	movwf	??_my_isr
   247  0010  0870               	movf	??_my_isr,w
   248  0011  07F3               	addwf	_cmpt,f	;volatile
   249  0012                     i1l540:
   250                           
   251                           ;main.c: 28:     if(cmpt%2)
   252  0012  1C73               	btfss	_cmpt,0	;volatile
   253  0013  2815               	goto	u1_21
   254  0014  2816               	goto	u1_20
   255  0015                     u1_21:
   256  0015  2819               	goto	i1l19
   257  0016                     u1_20:
   258  0016                     i1l542:
   259                           
   260                           ;main.c: 29:     {;main.c: 30:         GPIObits.GP4=1;
   261  0016  1283               	bcf	3,5	;RP0=0, select bank0
   262  0017  1605               	bsf	5,4	;volatile
   263                           
   264                           ;main.c: 31:     }
   265  0018  281B               	goto	i1l20
   266  0019                     i1l19:	
   267                           ;main.c: 32:     else
   268                           
   269                           
   270                           ;main.c: 33:     {;main.c: 34:         GPIObits.GP4=0;
   271  0019  1283               	bcf	3,5	;RP0=0, select bank0
   272  001A  1205               	bcf	5,4	;volatile
   273  001B                     i1l20:	
   274                           ;main.c: 35:     }
   275                           
   276                           
   277                           ;main.c: 36:     INTCONbits.INTF=0;
   278  001B  108B               	bcf	11,1	;volatile
   279  001C  0063               	sleep	;# 
   280                           
   281                           ;main.c: 38:     __nop();
   282  001D  0000               	nop
   283  001E                     i1l21:
   284  001E  0872               	movf	??_my_isr+2,w
   285  001F  008A               	movwf	10
   286  0020  0E71               	swapf	??_my_isr+1,w
   287  0021  0083               	movwf	3
   288  0022  0EFE               	swapf	btemp,f
   289  0023  0E7E               	swapf	btemp,w
   290  0024  0009               	retfie
   291  0025                     __end_of_my_isr:
   292  007E                     btemp	set	126	;btemp
   293  007E                     wtemp0	set	126
   294                           
   295                           	psect	intentry
   296  0004                     __pintentry:	
   297                           ;incstack = 0
   298                           ; Regs used in _my_isr: [wreg+status,2+status,0]
   299                           
   300  0004                     interrupt_function:
   301  007E                     saved_w	set	btemp
   302  0004  00FE               	movwf	btemp
   303  0005  0E03               	swapf	3,w
   304  0006  00F1               	movwf	??_my_isr+1
   305  0007  080A               	movf	10,w
   306  0008  00F2               	movwf	??_my_isr+2
   307  0009  280E               	ljmp	_my_isr
   308                           
   309                           	psect	idloc
   310                           
   311                           ;Config register IDLOC0 @ 0x2000
   312                           ;	unspecified, using default values
   313  2000                     	org	8192
   314  2000  3FFF               	dw	16383
   315                           
   316                           ;Config register IDLOC1 @ 0x2001
   317                           ;	unspecified, using default values
   318  2001                     	org	8193
   319  2001  3FFF               	dw	16383
   320                           
   321                           ;Config register IDLOC2 @ 0x2002
   322                           ;	unspecified, using default values
   323  2002                     	org	8194
   324  2002  3FFF               	dw	16383
   325                           
   326                           ;Config register IDLOC3 @ 0x2003
   327                           ;	unspecified, using default values
   328  2003                     	org	8195
   329  2003  3FFF               	dw	16383
   330                           
   331                           	psect	config
   332                           
   333                           ;Config register CONFIG @ 0x2007
   334                           ;	Oscillator Selection bits
   335                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O functio
      +                          n on GP5/OSC1/CLKIN
   336                           ;	Watchdog Timer Enable bit
   337                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   338                           ;	Power-up Timer Enable bit
   339                           ;	PWRTE = OFF, PWRT disabled
   340                           ;	MCLR Pin Function Select bit
   341                           ;	MCLRE = ON, MCLR pin function is MCLR
   342                           ;	Code Protection bit
   343                           ;	CP = OFF, Program memory code protection is disabled
   344                           ;	Internal Oscillator Frequency Select
   345                           ;	IOSCFS = 8MHZ, 8 MHz
   346                           ;	Brown-out Reset Selection bits
   347                           ;	BOREN = OFF, BOR disabled
   348  2007                     	org	8199
   349  2007  3CF4               	dw	15604

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            30      0       0       3        0.0%
BANK0               30      0       0       4        0.0%
ABS                  0      0       4       5        0.0%
DATA                 0      0       4       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 30 10:59:52 2022

                     l26 0030                      l550 002D                      l552 002F  
                    l544 0025                      l546 0029                      l548 002C  
                   _GPIO 0005                     i1l20 001B                     i1l21 001E  
                   i1l19 0019                     u1_20 0016                     u1_21 0015  
                   _cmpt 0073                     _main 0025                     btemp 007E  
                   start 000A                    ?_main 0070                    _ANSEL 009F  
                  i1l540 0012                    i1l542 0016                    i1l538 000E  
                  _TRISA 0085                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 0032  
                 ??_main 0073                   _my_isr 000E                   saved_w 007E  
__end_of__initialization 000C           __pcstackCOMMON 0070               __pmaintext 0025  
             __pintentry 0004                  ?_my_isr 0070                  __ptext1 000E  
        __size_of_my_isr 0017     end_of_initialization 000C           __end_of_my_isr 0025  
    start_initialization 000B                 ??_my_isr 0070              __pbssCOMMON 0073  
              ___latbits 0000        interrupt_function 0004                 _GPIObits 0005  
          __size_of_main 000D               _INTCONbits 000B                 intlevel1 0000  
